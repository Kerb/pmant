version: '3.8'

services:
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend-app:
    build:
      context: ./frontend-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # React development server port
    environment:
      - CHOKIDAR_USEPOLLING=true # For hot-reloading in Docker
    depends_on:
      backend-app:
        condition: service_started # Frontend depends on backend for API calls

  backend-app:
    build:
      context: ./backend-app
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  certbot:
    image: certbot/certbot
    volumes:
      - ./certs:/etc/letsencrypt
      - ./webroot:/var/www/certbot
    entrypoint: >
      sh -c "certbot certonly --webroot -w /var/www/certbot -d pmant.kerba.net --email admin@pmant.kerba.net --agree-tos --non-interactive"

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/letsencrypt

volumes:
  db_data:
