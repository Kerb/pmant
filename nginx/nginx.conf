events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    resolver 127.0.0.11 valid=30s; # Docker's internal DNS

    server {
        listen 80;
        server_name pmant.kerba.net;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;  # совпадает с -w в certbot
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 80;

        set $frontend_app_host frontend-app;
        set $backend_app_host backend-app;

        location / {
            proxy_pass http://$frontend_app_host:3000; # Assuming frontend runs on port 3000
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api {
            proxy_pass http://$backend_app_host:8080; # Assuming backend runs on port 8080
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
